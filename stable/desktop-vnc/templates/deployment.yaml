apiVersion: apps/v1
# StatefulSet
kind: Deployment
metadata:
  name: {{ include "desktop-vnc.fullname" . }}
  labels:
{{ include "desktop-vnc.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "desktop-vnc.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "desktop-vnc.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- include "desktop-vnc.imagePullSecrets" . | nindent 6 }}
      serviceAccount: {{ include "desktop-vnc.fullname" . }}
      serviceAccountName: {{ include "desktop-vnc.fullname" . }}
    {{- if .Values.nodeDockerDaemon.enabled }}
      securityContext:
        fsGroup: {{ .Values.nodeDockerDaemon.dockerGroupIdOnNode }} # Run the following cmd on k8s node $# cut -d: -f3 < <(getent group docker)
    {{- end }}
      initContainers:
{{- if .Values.extraInitContainers }}
{{ tpl (toYaml .Values.extraInitContainers) . | indent 8 }}
{{- end }}
      {{- if .Values.desktop.persistence.enabled }}
        - name: volume-prewarming
          image: {{ include "desktop-vnc.busyboxImage" . }}
          command: ["sh", "-c", "chown -R 1000:0 {{ .Values.desktop.persistence.mountPath }}"]
          volumeMounts:
          - name: {{ .Chart.Name }}
            mountPath: {{ .Values.desktop.persistence.mountPath }}
      {{- end }}
      {{- if .Values.desktop.extraTools.docker.enabled }}
        - name: tools-docker
          image: {{ include "desktop-vnc.extraToolsDockerImage" . }}
          command: ["/bin/sh"]
          args: ["-c", "mv {{ .Values.desktop.extraTools.docker.binary }} /shared-bin/ && chmod a+x /shared-bin/* && chown {{ .Values.desktop.uid }}:0 -R /shared-bin/"]
          volumeMounts:
          - name: bin
            mountPath: /shared-bin
      {{- end }}
      {{- if .Values.desktop.extraTools.dockerCompose.enabled }}
        - name: tools-docker-compose
          image: {{ include "desktop-vnc.extraToolsDockerComposeImage" . }}
          command: ["/bin/sh"]
          args: ["-c", "mv {{ .Values.desktop.extraTools.dockerCompose.binary }} /shared-bin/ && chmod a+x /shared-bin/* && chown {{ .Values.desktop.uid }}:0 -R /shared-bin/"]
          volumeMounts:
          - name: bin
            mountPath: /shared-bin
      {{- end }}
      {{- if .Values.desktop.extraTools.kubectl.enabled }}
        - name: tools-kubectl
          image: {{ include "desktop-vnc.extraToolsKubectlImage" . }}
          command: ["/bin/sh"]
          args: ["-c", "mv {{ .Values.desktop.extraTools.kubectl.binary }} /shared-bin/ && chmod a+x /shared-bin/* && chown {{ .Values.desktop.uid }}:0 -R /shared-bin/"]
          volumeMounts:
          - name: bin
            mountPath: /shared-bin
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
      {{- end }}
      {{- if .Values.desktop.extraTools.helm.enabled }}
        - name: tools-helm
          image: {{ include "desktop-vnc.extraToolsHelmImage" . }}
          command: ["/bin/sh"]
          args: ["-c", "mv {{ .Values.desktop.extraTools.helm.binary }} /shared-bin/ && chmod a+x /shared-bin/* && chown {{ .Values.desktop.uid }}:0 -R /shared-bin/"]
          volumeMounts:
          - name: bin
            mountPath: /shared-bin
      {{- end }}
      {{- if .Values.desktop.extraTools.aws.enabled }}
        - name: tools-aws
          image: {{ include "desktop-vnc.extraToolsAwsImage" . }}
          command: ["/bin/sh"]
          args: ["-c", "mv {{ .Values.desktop.extraTools.aws.binary }} /shared-bin/ && chmod a+x /shared-bin/* && chown {{ .Values.desktop.uid }}:0 -R /shared-bin/"]
          volumeMounts:
          - name: bin
            mountPath: /shared-bin
      {{- end }}
      {{- if .Values.desktop.extraTools.git.enabled }}
        - name: tools-git
          image: {{ include "desktop-vnc.extraToolsGitImage" . }}
          command: ["/bin/sh"]
          args: ["-c", "mv {{ .Values.desktop.extraTools.git.binary }} /shared-bin/ && chmod a+x /shared-bin/* && chown {{ .Values.desktop.uid }}:0 -R /shared-bin/"]
          volumeMounts:
          - name: bin
            mountPath: /shared-bin
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
      {{- end }}
      {{- if .Values.desktop.extraTools.kind.enabled }}
        - name: tools-kubernetes-in-docker
          image: {{ include "desktop-vnc.extraToolsKindImage" . }}
          command: ["/bin/sh"]
          args: ["-c", "mv {{ .Values.desktop.extraTools.kind.binary }} /shared-bin/ && chmod a+x /shared-bin/* && chown {{ .Values.desktop.uid }}:0 -R /shared-bin/"]
          volumeMounts:
          - name: bin
            mountPath: /shared-bin
      {{- end }}
    ## use fsGroup=65534 when When eks.amazonaws.com/role-arn exists in .Values.serviceAccount.annotations
    {{- if .Values.serviceAccount.create }}
    {{- $annotationEKSRoleArn := (get .Values.serviceAccount.annotations "eks.amazonaws.com/role-arn" ) -}}
    {{- if $annotationEKSRoleArn }}
      securityContext:
        fsGroup: 65534
    {{- end }}
    {{- end }}
      containers:
####### Here the definition of the main container ##########
        - name: {{ .Chart.Name }}
          image: {{ include "desktop-vnc.image" . }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 6901
              protocol: TCP
            - name: vnc
              containerPort: 5901
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 5901
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
          envFrom:
          - configMapRef:
              name: {{ include "desktop-vnc.fullname" . }}-env-vars
          - secretRef:
              name: {{ include "desktop-vnc.fullname" $ }}-env-vars
          volumeMounts:
          - mountPath: /dev/shm
            name: dshm
{{- if .Values.extraVolumeMounts }}
{{ tpl (toYaml .Values.extraVolumeMounts | indent 10) . }}
{{- end }}
        {{- if .Values.desktop.persistence.enabled }}
          - mountPath: {{ .Values.desktop.persistence.mountPath }}
            name: {{ .Chart.Name }}
        {{- end }}
        {{- if .Values.desktop.persistenceShared.enabled }}
          - mountPath: {{ .Values.desktop.persistenceShared.mountPath }}
            name: {{ .Chart.Name }}-shared
        {{- end }}
        {{- if (or .Values.desktop.extraTools.docker.enabled .Values.desktop.extraTools.kubectl.enabled .Values.desktop.extraTools.helm.enabled .Values.desktop.extraTools.aws.enabled .Values.desktop.extraTools.git.enabled .Values.desktop.extraTools.kind.enabled) }}
          - mountPath: {{ .Values.desktop.extraTools.mountPath }}
            name: bin
        {{- end }}
        {{- if .Values.nodeDockerDaemon.enabled }}
          - name: dockersock
            readOnly: true
            mountPath: /var/run/docker.sock
        {{- end }}
        {{- if .Values.podDockerDaemon.enabled }}
          - name: docker-certs
            mountPath: /certs
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- if .Values.podDockerDaemon.enabled }}
#### Definition of container behaves like docker engine inside Pod###
        - name: dind-daemon
          image: {{ include "desktop-vnc.podDockerDaemonImage" . }}
        {{- if .Values.podDockerDaemon.insecureRegistry }}
          args:
          - --insecure-registry
          - {{ .Values.podDockerDaemon.insecureRegistry }}
        {{- end }}
          resources:
            {{- toYaml .Values.podDockerDaemon.resources | nindent 12 }}
          securityContext:
              privileged: true
          volumeMounts:
          {{- if .Values.desktop.persistence.enabled }}
          # daemon must have some volume with same mountPath so -v $(pwd):/x can work
            - mountPath: {{ .Values.desktop.persistence.mountPath }}
              name: {{ .Chart.Name }}
          {{- end }}
            - name: docker-graph-storage
              mountPath: /var/lib/docker
            - name: docker-certs
              mountPath: /certs
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - mountPath: /sys/fs/cgroup
              name: cgroup
      {{- end }}

      volumes:
        # https://stackoverflow.com/a/46434614/747579
        - name: dshm
          emptyDir:
            medium: Memory
        {{- if .Values.desktop.persistence.enabled }}
        - name: {{ .Chart.Name }}
          persistentVolumeClaim:
            claimName: {{ .Values.desktop.persistence.existingClaim | default (include "desktop-vnc.fullname" .) }}
        {{- end }}
        {{- if .Values.desktop.persistenceShared.enabled }}
        - name: {{ .Chart.Name }}-shared
          persistentVolumeClaim:
            claimName: {{ .Values.desktop.persistenceShared.existingClaim }}
        {{- end }}
        {{- if .Values.podDockerDaemon.enabled }}
        - name: modules
          hostPath:
            path: /lib/modules
            type: Directory
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
        - name: docker-graph-storage
        {{- if .Values.podDockerDaemon.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.podDockerDaemon.persistence.existingClaim | default (printf "%s-pod-docker-daemon"  (include "desktop-vnc.fullname" .) ) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: docker-certs
          emptyDir: {}
        {{- end }}
        {{- if (or .Values.desktop.extraTools.docker.enabled .Values.desktop.extraTools.kubectl.enabled .Values.desktop.extraTools.helm.enabled .Values.desktop.extraTools.aws.enabled .Values.desktop.extraTools.git.enabled .Values.desktop.extraTools.kind.enabled) }}
        - name: bin
          emptyDir: {}
        {{- end }}
        {{- if .Values.nodeDockerDaemon.enabled }}
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        {{- end }}
{{- if .Values.extraVolumes }}
{{ tpl (toYaml .Values.extraVolumes | indent 8) . }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
